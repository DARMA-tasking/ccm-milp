name: Code Quality (Tests, Linting, Coverage)
on: push
concurrency:
  group: CI-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    continue-on-error: false
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
    runs-on: ${{ matrix.os }}
    env:
      deploy_badges_src_branch: develop
      deploy_badges_dst_branch: deploy-badges
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y git xvfb
          sudo apt-get install glpk-utils
          sudo apt-get install coinor-cbc

      - name: Python Setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint
          pip install tox-gh-actions

      - name: Register Github Actions Problem matchers (pylint)
        run: |
          echo "::add-matcher::.github/workflows/matchers/pylint.json"

      - name: Running Tests, Pylint and Coverage using TOX
        id: run_tox
        run: |
          tox
          if [ -e "./artifacts/pylint.txt" ]; then PYLINT_REPORT_EXISTS="true"; else PYLINT_REPORT_EXISTS="false"; fi
          echo "pylint_report_exists=$PYLINT_REPORT_EXISTS" >> $GITHUB_OUTPUT
          if [ -e "./artifacts/coverage.txt" ]; then COVERAGE_REPORT_EXISTS="true"; else COVERAGE_REPORT_EXISTS="false"; fi
          echo "coverage_report_exists=$COVERAGE_REPORT_EXISTS" >> $GITHUB_OUTPUT

      - name: Report Test results
        uses: phoenix-actions/test-reporting@v15
        if: success() || failure()
        with:
          name: Tests report (${{ matrix.os }}, ${{ matrix.python-version }})
          path: artifacts/unittest/reports/TEST-*.xml
          reporter: java-junit
          output-to: step-summary